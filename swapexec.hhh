// Include file created from assembler include files

//      Created by Inc2hhh V1.00, 1992


// *** The following compiled from source file "SWAPEXEC.INC" *** 

// 
// Conditional copmilation definitions
// 
const GenMsg  =       1;                // Generate text messages & support routine if NonZero
// 
// Include file with actions bit mask definitions
// 
const Ac_Ems  =       1;                // Allow swapping to EMS
const Ac_Xms  =       2;                // Allow swapping to XMS
const Ac_Dsk  =       4;                // Allow swapping to disk
const Ac_EmXm =       8;                // EMS first & XMS after instead of XMS first & EMS after
const Ac_Path =       0x10;             // Perform search_on_PATH
const Ac_Used =       0x20;             // Swap used memory only, entire memory else
const Ac_War  =       0x40;             // Ignore warnings
const Ac_Err  =       0x80;             // Ignore errors & warnings
const Ac_Sev  =       0x100;            // Ignore severe errors, errors & warnings
const Ac_Fat  =       0x200;            // Ignore fatal errors, severe errors, errors & warnings
const Ac_SPrm =       0x400;            // Do not display swap parameters
const Ac_CoEx =       0x800;            // Search for .Com & .Exe files automatically
const Ac_FDsk =       0x1000;           // Force disk swapping if EMS/XMS allocation failure
const Ac_FExp =       0x2000;           // Resolve file name to execute using full path
// 
// Possible error codes
// 
const Er_LAlo =       -1;               // Last memory allocation error
const Er_LFre =       -2;               // Last memory block free error
const Er_I01  =       -3;               // Internal: negative swappable size !
const Er_I02  =       -4;               // Internal: can not free XMS after allocation
const Er_Bdv  =       -5;               // Bad device name in swap file name
const Er_SwN  =       -6;               // Not enough room for swapping in specified swap areas
const Er_FCre =       -7;               // Swap file creation error
const Er_FWrt =       -8;               // Unexpected write error while swapping
const Er_WEof =       -9;               // Unexpected end of file while swapping
const Er_Cwe  =       -10;              // Work file close error
const Er_XAf  =       -11;              // XMS allocation error
const Er_Xwe  =       -12;              // XMS write data error
const Er_I03  =       -13;              // Internal: Invalid swap destination
const Er_Eaf  =       -14;              // EMS allocation failure
const Er_ESg  =       -15;              // EMS segment request error
const Er_Eme  =       -16;              // EMS map error
const Er_I04  =       -17;              // Internal: can not truncate self code
const Er_Exe  =       -18;              // DOS EXEC function failed
const Er_SAlo =       -19;              // Swapped block allocation error
// 
// Fatal errors ID's
// 
const Fa_Suc  =       0;                // No error, success
const Fa_SwAl =       1;                // Can not re-allocate swapped area
const Fa_Tsr  =       2;                // Memory structure still occupied after EXEC, possible TSR
const Fa_I01  =       3;                // Internal: Restoring from nothing
const Fa_OpnF =       4;                // Can not re-open swap file
const Fa_FRdE =       5;                // Error reading swap file
const Fa_Eof  =       6;                // Unexpected end of swap file
const Fa_ClSf =       7;                // Can not close swap file
const Fa_Del  =       8;                // Can not delete swap file
const Fa_XMov =       9;                // Unexpected error during XMS move
const Fa_XFre =       10;               // Can not free XMS memory
const Fa_I02  =       11;               // Internal:Invalid restore source
const Fa_GSeg =       12;               // Can not get EMS mapping address
const Fa_Map  =       13;               // Can not map EMS page
const Fa_EFre =       14;               // Can not free EMS memory
const Fa_CkSm =       15;               // Swapped code checksum error
const Fa_CEnd =       16;               // Internal: Can not find end of command string
// 
// Last error sub-code types
// 
const Ln_None =       0;                // No sub-code
const Ln_Dos  =       1;                // DOS error sub-code
const Ln_Xms  =       2;                // XMS error sub-code
const Ln_Ems  =       3;                // EMS error sub-code
// 
// Last swap destination
// 
const Fr_None =       0;                // Not defined
const Fr_Dsk  =       1;                // Disk
const Fr_Xms  =       2;                // XMS
const Fr_Ems  =       4;                // EMS
// 

// *** End of "SWAPEXEC.INC" ***
